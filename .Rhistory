high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg <- table(pollution$region)
red
reg
barplot(reg, col = "wheat", main = "Number of Countries in Each Region")
play()
par(mar = c(5, 4, 2, 2))
barplot(reg, col = "wheat", main = "Number of Countries in Each Region")
nxt()
barplot(reg, col = "wheat", main = "Number of Countries in Each Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow = c(2,1), mar = c(4, 4, 2, 1))
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col)
hist(subset(pollution, region == "west")$pm25, col = 'green')
quit()
install.packages("RMySQL")
ucscDb <- dbConnect(MySQL(), user='genome',
host="genome-mysql.cse.ucsc.edu")
library(RMySQL)
ucscDb <- dbConnect(MySQL(), user='genome',
host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb);
hg19 <- dbConnect(MySQL(), user = "genome", db = "hg19",
host = "genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19, "affyU133Plus2")
dbGetQuery(hg19, "select count(*) from affyU133Plus2")
affyData <- dbReadTable(hg19, "affyU133Plus2") ## read the table
head(affyData)
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query); quantile(affyMis$misMatches)
affyMisSmall <- fetch(query, n=10); dbClearResult(query);
dim(affyMisSmall)
dbDisconnect(hg19)
source("http://bioconductor.org/biocLite.R")
?BiocUpgrade
biocLite("BiocUpgrade")
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
created = h5createGroup("example.h5", "foo")
created = h5createGroup("example.h5", "baa")
created = h5createGroup("example.h5", "foo/foobaa")
h5ls("example.h5")
A = matrix(1:10, nr=5, nc=2)
h5write(A, "example.h5", "foo/A")
B = array(seq(0.1, 2.0, by=0.1), dim=c(5,2,2))
attr(B, "scale") <- "liter"
h5write(B, "example.h5", "foo/foobaa/B")
h5ls("example.h5")
df = data.frame(1L:5L, seq(0,1, length.out=5), c("ab", "cde", "fghi", "a", "s"),
stringsAsFactors = F)
h5write(df, "example.h5", "df")
h5ls("example.h5")
library(httr)
oauth_endpoints("github")
oe <- oauth_endpoints("github")
oe
class(oe)
myapp <- oauth_app("github",     ## name of the provider application
key ="13c8eaf69cfc55a754a5",
secret = "615f0b33dedf20ab25a76c750fd00fb46eb09446")
class(myapp)
str(oe)
str(myapp)
str(github_token)
github_token <- oauth2.0_token(oe, myapp)
str(github_token)
gtoken <- config(token = github_token)
str(gtoken)
req <- GET("https://api.github.com/users/jtleek/repos", ## url I want to access
gtoken)   ## authentication to access github
req
stop_for_status(req)
content(req)
req
library(jsonlite)
jsonData <- fromJSON(req)
json1 <- content(req)    ## view contents of the request
library(jsonlite)
json2 <- fromJSON(toJSON(json1))
names(json2)
head(json2)
req
head(json2)
names(json2)
json2$created_at
names(json2)
json2[5,1]
str(json2)
class(json2)
View(json2)
names(json2)
head(json2$id)
head(json2$name)
any(json$name == "datasharing")
any(json2$name == "datasharing")
which(json2$name == "datasharing")
json$name[11]
json2$name[11]
names(json2)
json2$created_at[11]
library(dplyr)
setwd("/Users/Natasha/Google Drive/Coursera/homework/data/UCI HAR Dataset/")
files <- c("train/X_train.txt", "test/X_test.txt")
full_dataset <- lapply(files, read.table, header = F, nrow = 1)
files <- c("train/X_train.txt", "test/X_test.txt")
full_dataset <- sapply(files, read.table, header = F, nrow = 1)
View(full_dataset)
full_dataset <- lapply(files, read.table, header = F, nrow = 1)
features <- read.table("features.txt", header = F)
View(features)
id_file <- "train/subject_train.txt"
label_file <- "train/y_train.txt"
feature_file <- "train/X_train.txt"
id <- read.table(id_file, header = F)
View(id)
names(id) <- c("id")
View(id)
label <- read.table(label_file, header = F)
View(label)
names(id) <- c("activity")
id <- read.table(id_file, header = F)
names(id) <- c("id")
label <- read.table(label_file, header = F)
names(label) <- c("activity")
label <- factor(label$activity, labels = c("walking",
"upstairs",
"downstairs",
"sitting",
"standing",
"laying"))
View(label)
label <- read.table(label_file, header = F)
names(label) <- c("activity")
feature_vector <- read.table(feature_file, header = F)
names(feature_vector) <- features[,2]
full_data <- cbind(id, label, feature_vector, check.names = F)
full_data <- cbind(id, label, feature_vector)
View(full_data)
select_data <- select(full_data, id, activity, contains("mean"),
contains("std"), check.names = F)
select_data <- select(full_data, id, activity, contains("mean"),
contains("std"))
View(features)
gsub("(", "", features$V2)
gsub("\(", "", features$V2)
gsub(\"(", "", features$V2)
gsub("(", "", features$V2)
gsub("\\(", "", features$V2)
features$V2 <- gsub("\\(", "", features$V2)
features$V2 <- gsub("\\)", "", features$V2)
features$V2 <- gsub("\\-)", "", features$V2)
features$V2 <- gsub("\\,)", "", features$V2)
features$V2 <- gsub("\-)", "", features$V2)
features$V2 <- gsub("\\-", "", features$V2)
features$V2 <- gsub("\\,", "", features$V2)
features$features <- features$V2
features <- rename(features, c("V2" = "features"))
select(features, names = V2)
features <- select(features, names = V2)
features
library(dplyr)
features <- read.table("features.txt", header = F)
# clean up the variable names
features$V2 <- gsub("\\(", "", features$V2)
features$V2 <- gsub("\\)", "", features$V2)
features$V2 <- gsub("\\-", "", features$V2)
features$V2 <- gsub("\\,", "", features$V2)
features <- select(features, names = V2)
id_file <- "train/subject_train.txt"
label_file <- "train/y_train.txt"
feature_file <- "train/X_train.txt"
id <- read.table(id_file, header = F)
names(id) <- c("id")
label <- read.table(label_file, header = F)
names(label) <- c("activity")
feature_vector <- read.table(feature_file, header = F)
names(feature_vector) <- features
View(feature_vector)
names(feature_vector) <- features$1
names(feature_vector) <- features$names
select(feature_vector, contains("mean"), contains("std"))
features <- read.table("features.txt", header = F)
features$V2 <- gsub("\\(", "", features$V2)
features$V2 <- gsub("\\)", "", features$V2)
features$V2 <- gsub("\\-", "", features$V2)
features$V2 <- gsub("\\,", "", features$V2)
features <- select(features, names = V2)
grepl("tBodyAccmean", features$names)
grepl("mean" | "std" , features$names)
grepl("mean" | "std", features$names)
grepl("mean", features$names)
grepl("mean" | "std", features$names)
grepl("mean|std", features$names)
features <- read.table("features.txt", header = F)
features <- select(features, names = V2)
idx <- grepl("mean|std", features$names)
id_file <- "train/subject_train.txt"
label_file <- "train/y_train.txt"
feature_file <- "train/X_train.txt"
id <- read.table(id_file, header = F)
names(id) <- c("id")
label <- read.table(label_file, header = F)
names(label) <- c("activity")
feature_vector <- read.table(feature_file, header = F)
feature_vector_subset <- feature_vector[, idx]
View(feature_vector_subset)
feature_vector <- read.table(feature_file, header = F)
names(feature_vector) <- features$names
View(feature_vector)
features$names <- gsub("\\(", "", features$names)
View(features)
features$names <- gsub("\\)", "", features$names)
features$names <- gsub("\\-", "", features$names)
features <- read.table("features.txt", header = F)
features <- select(features, names = V2)
features$names <- gsub("\\(", "", features$names)
features$names <- gsub("\\)", "", features$names)
features$names <- gsub("\\-", ".", features$names)
features$names <- gsub("\\,", ".", features$names)
idx <- grepl("mean|std", features$names)
id <- read.table(id_file, header = F)
names(id) <- c("id")
View(id)
label <- read.table(label_file, header = F)
names(label) <- c("activity")
View(label)
feature_vector <- read.table(feature_file, header = F)
names(feature_vector) <- features$names
View(feature_vector)
feature_vector_subset <- feature_vector[, idx]
View(feature_vector_subset)
full_data <- cbind(id, label, feature_vector_subset)
sum(idx)
View(full_data)
features <- read.table("features.txt", header = F)
features <- select(features, names = V2)
features$names <- gsub("\\(", "", features$names)
features$names <- gsub("\\)", "", features$names)
features$names <- gsub("\\-", "", features$names)
features$names <- gsub("\\,", "", features$names)
features$names <- tolower(features$names)
features$names <- sub("t", "", features$names)
idx <- grepl("mean|std", features$names)
sum(idx)
features$names <- gsub("\\(", "", features$names)
features <- read.table("features.txt", header = F)
features <- select(features, names = V2)
features$names <- gsub("\\(", "", features$names)
features$names <- gsub("\\)", "", features$names)
features$names <- gsub("\\-", "", features$names)
features$names <- gsub("\\,", "", features$names)
features$names <- sub("^t", "", features$names)
features$names <- tolower(features$names)
idx <- grepl("mean|std", features$names)
sum(idx)
features <- read.table("features.txt", header = F)
features <- select(features, names = V2)
features$names <- gsub("\\(", "", features$names)
features$names <- gsub("\\)", "", features$names)
features$names <- gsub("\\-", "", features$names)
features$names <- gsub("\\,", "", features$names)
features$names <- tolower(features$names)
idx <- grepl("mean|std", features$names)
sum(idx)
features$names <- sub("^t", "", features$names)
idx <- grepl("mean|std", features$names)
sum(idx)
feature_vector <- read.table(feature_file, header = F)
names(feature_vector) <- features$names
feature_vector_subset <- feature_vector[, idx]
full_data <- cbind(id, label, feature_vector_subset)
View(full_data)
full_data$label <- factor(full_data$label, labels = c("walking",
"upstairs",
"downstairs",
"sitting",
"standing",
"laying"))
str(full_data$label)
full_data$activity <- factor(full_data$activity, labels = c("walking",
"upstairs",
"downstairs",
"sitting",
"standing",
"laying"))
train_data <- make_table("train/subject_train.txt", "train/y_train.txt",
"train/X_train.txt")
make_table <- function(id_file, label_file, feature_file, idx = idx) {
# load id file and annotate
id <- read.table(id_file, header = F)
names(id) <- c("id")
# load labels file and annotate
label <- read.table(label_file, header = F)
names(label) <- c("activity")
# load feature vector file and annotate
feature_vector <- read.table(feature_file, header = F)
names(feature_vector) <- features$names
feature_vector_subset <- feature_vector[, idx]
# combine data frames
full_data <- cbind(id, label, feature_vector_subset)
# select subset with mean and standard deviation information
full_data$activity <- factor(full_data$activity, labels = c("walking",
"upstairs",
"downstairs",
"sitting",
"standing",
"laying"))
full_data
}
train_data <- make_table("train/subject_train.txt", "train/y_train.txt",
"train/X_train.txt")
test_data <- make_table("test/subject_test.txt", "test/y_test.txt",
"test/X_test.txt")
train_data$type <- "train"
View(train_data)
train_data$type
test_data$type <- "test"
select(train_data, train, 1:563)
select(train_data, type, 1:563)
train_data <- select(train_data, type, 1:563)
View(train_data)
train_data <- select(train_data, id, type, 2:563)
train_data <- make_table("train/subject_train.txt", "train/y_train.txt",
"train/X_train.txt")
train_data$type <- "train"
train_data <- select(train_data, id, type, 2:563)
test_data <- select(test_data, id, type, 2:563)
View(test_data)
full_data <- rbind(train_data, test_data)
View(full_data)
write.csv(full_data, "tidy_data.csv")
group_by(full_data, id, activity) %>%
summarize(mean)
grouped_data <- group_by(full_data, id, activity)
table(grouped_data)
summarize(grouped_data, mean(bodyaccmeanx))
summarize(grouped_data, lapply(grouped_data[, 4:564], mean)
summarize(grouped_data, lapply(grouped_data[, 4:564], mean))
grouped_data[, 4:564]
names(grouped_data)[4:564]
summarize(grouped_data, lapply(names(grouped_data)[4:564], mean))
class(names(grouped_data)[4:564])
class(as.list(names(grouped_data)[4:564]))
as.list(names(grouped_data)[4:564])
summarize(grouped_data, lapply(class(as.list(names(grouped_data)[4:564])), mean))
summarize(grouped_data, lapply(as.list(names(grouped_data)[4:564]), mean))
summarize_each(grouped_data, mean)
summarize_each(grouped_data, funs(mean))
group_by(full_data, id, activity) %>%
select(-type) %>%
summarize_each(funs(mean))
averages <- group_by(full_data, id, activity) %>%
select(-type) %>%
summarize_each(funs(mean))
write.csv(averages, "tidy_summaries.csv")
View(feature_vector)
averages <- group_by(full_data, id, activity) %>%
select(-type) %>%
summarize_each(funs(mean))
View(averages)
write.csv(averages, "tidy_summaries.csv")
View(feature_vector)
View(features)
View(full_data)
# load required libraries
library(dplyr)
# load the features data set
features <- read.table("UCI HAR Dataset/features.txt", header = F)
# clean up the columns
features <- select(features, names = V2)
# clean up the feature names
features$names <- gsub("\\(", "", features$names)
features$names <- gsub("\\)", "", features$names)
features$names <- gsub("\\-", "", features$names)
features$names <- gsub("\\,", "", features$names)
features$names <- sub("^t", "", features$names)
features$names <- tolower(features$names)
# create an index vector 'idx' that identifies features with either
# 'mean' or 'std' in the name
idx <- grepl("mean|std", features$names)
# 'make_table' is a function that generates a tidy table using inputs:
# 'id_file' : path to file with subject id's
# 'label_file' : path to file with activity labels
# 'feature_file' : path to feature vector file
make_table <- function(id_file, label_file, feature_file, idx = idx) {
# load id file and annotate
id <- read.table(id_file, header = F)
names(id) <- c("id")
# load labels file and annotate
label <- read.table(label_file, header = F)
names(label) <- c("activity")
# load feature vector file and annotate
feature_vector <- read.table(feature_file, header = F)
names(feature_vector) <- features$names
feature_vector_subset <- feature_vector[, idx]
# combine data frames
full_data <- cbind(id, label, feature_vector_subset)
# select subset with mean and standard deviation information
full_data$activity <- factor(full_data$activity, labels = c("walking",
"upstairs",
"downstairs",
"sitting",
"standing",
"laying"))
full_data
}
# generate the training data table
train_data <- make_table("UCI HAR Dataset/train/subject_train.txt",
"UCI HAR Dataset/train/y_train.txt",
"UCI HAR Dataset/train/X_train.txt")
train_data$type <- "train"
train_data <- select(train_data, id, type, 2:563)
# generate the test data table
test_data <- make_table("UCI HAR Dataset/test/subject_test.txt",
"UCI HAR Dataset/test/y_test.txt",
"UCI HAR Dataset/test/X_test.txt")
test_data$type <- "test"
test_data <- select(test_data, id, type, 2:563)
# combine the training and test data sets
full_data <- rbind(train_data, test_data)
# save the data
write.csv(full_data, "tidy_data.csv")
# extract average for each measured variable grouped by subject and activity
averages <- group_by(full_data, id, activity) %>%
select(-type) %>%
summarize_each(funs(mean))
write.csv(averages, "tidy_summaries.csv")
getwd()
setwd("/Users/Natasha/Google Drive/Coursera/homework/tidy_data/")
library(dplyr)
# load the features data set
features <- read.table("UCI HAR Dataset/features.txt", header = F)
# clean up the columns
features <- select(features, names = V2)
# clean up the feature names
features$names <- gsub("\\(", "", features$names)
features$names <- gsub("\\)", "", features$names)
features$names <- gsub("\\-", "", features$names)
features$names <- gsub("\\,", "", features$names)
features$names <- sub("^t", "", features$names)
features$names <- tolower(features$names)
# create an index vector 'idx' that identifies features with either
# 'mean' or 'std' in the name
idx <- grepl("mean|std", features$names)
# 'make_table' is a function that generates a tidy table using inputs:
# 'id_file' : path to file with subject id's
# 'label_file' : path to file with activity labels
# 'feature_file' : path to feature vector file
make_table <- function(id_file, label_file, feature_file, idx = idx) {
# load id file and annotate
id <- read.table(id_file, header = F)
names(id) <- c("id")
# load labels file and annotate
label <- read.table(label_file, header = F)
names(label) <- c("activity")
# load feature vector file and annotate
feature_vector <- read.table(feature_file, header = F)
names(feature_vector) <- features$names
feature_vector_subset <- feature_vector[, idx]
# combine data frames
full_data <- cbind(id, label, feature_vector_subset)
# select subset with mean and standard deviation information
full_data$activity <- factor(full_data$activity, labels = c("walking",
"upstairs",
"downstairs",
"sitting",
"standing",
"laying"))
full_data
}
# generate the training data table
train_data <- make_table("UCI HAR Dataset/train/subject_train.txt",
"UCI HAR Dataset/train/y_train.txt",
"UCI HAR Dataset/train/X_train.txt")
train_data$type <- "train"
train_data <- select(train_data, id, type, 2:563)
# generate the test data table
test_data <- make_table("UCI HAR Dataset/test/subject_test.txt",
"UCI HAR Dataset/test/y_test.txt",
"UCI HAR Dataset/test/X_test.txt")
test_data$type <- "test"
test_data <- select(test_data, id, type, 2:563)
# combine the training and test data sets
full_data <- rbind(train_data, test_data)
# save the data
write.csv(full_data, "tidy_data.csv")
# extract average for each measured variable grouped by subject and activity
averages <- group_by(full_data, id, activity) %>%
select(-type) %>%
summarize_each(funs(mean))
write.csv(averages, "tidy_summaries.csv")
View(averages)
write.table(full_data, "tidy_data.csv", row.name = F)
write.table(full_data, "tidy_data.csv", row.names = F)
write.table(averages, "tidy_summaries.csv", row.names = F)
write.table(full_data, "tidy_data.txt", row.names = F)
write.table(averages, "tidy_summaries.txt", row.names = F)
write.table(full_data, "tidy_data.txt", row.names = F)
